//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.02 at 12:08:24 PM GMT 
//


package link.omny.decisions.model;

import java.io.Writer;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;

import link.omny.decisions.api.DecisionException;
import lombok.NoArgsConstructor;


/**
 * <p>Java class for tDefinitions complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDefinitions">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tDMNElement">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}Import" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}ItemDefinition" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}DRGElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}ElementCollection" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}BusinessContextElement" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="expressionLanguage" type="{http://www.w3.org/2001/XMLSchema}anyURI" default="FEEL" />
 *       &lt;attribute name="typeLanguage" type="{http://www.w3.org/2001/XMLSchema}anyURI" default="FEEL" />
 *       &lt;attribute name="namespace" use="required" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlRootElement(name = "Definitions")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDefinitions", propOrder = {
    "_import",
    "itemDefinition",
    "drgElement",
    "elementCollection",
    "businessContextElement"
})
@NoArgsConstructor
// @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
public class Definitions extends DmnElement {

    public static final String DMN_1_0 = "http://www.omg.org/spec/DMN/20130901";
    @XmlElement(name = "Import")
    protected List<DecisionModelImport> _import;
    @XmlElement(name = "ItemDefinition")
    protected List<ItemDefinition> itemDefinition;
    @XmlElementRef(name = "DRGElement", namespace = DMN_1_0, type = JAXBElement.class, required = false)
    protected List<JAXBElement<? extends DrgElement>> drgElement;
    @XmlElement(name = "ElementCollection")
    protected List<ElementCollection> elementCollection;
    @XmlElementRef(name = "BusinessContextElement", namespace = DMN_1_0, type = JAXBElement.class, required = false)
    protected List<JAXBElement<? extends BusinessContextElement>> businessContextElement;
    @XmlAttribute(name = "expressionLanguage")
    @XmlSchemaType(name = "anyURI")
    protected String expressionLanguage;
    @XmlAttribute(name = "typeLanguage")
    @XmlSchemaType(name = "anyURI")
    protected String typeLanguage;
    @XmlAttribute(name = "namespace", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String namespace;

    public Definitions(String id, String name) {
        setId(id);
        setName(name);
    }

    /**
     * Gets the value of the import property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the import property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getImport().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DecisionModelImport }
     * 
     * 
     */
    public List<DecisionModelImport> getImport() {
        if (_import == null) {
            _import = new ArrayList<DecisionModelImport>();
        }
        return this._import;
    }

    /**
     * Gets the value of the itemDefinition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemDefinition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemDefinition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ItemDefinition }
     * 
     * 
     */
    public List<ItemDefinition> getItemDefinition() {
        if (itemDefinition == null) {
            itemDefinition = new ArrayList<ItemDefinition>();
        }
        return this.itemDefinition;
    }

    /**
     * Gets the value of the drgElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the drgElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getDrgElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link DrgElement }{@code >}
     * {@link JAXBElement }{@code <}{@link KnowledgeSource }{@code >}
     * {@link JAXBElement }{@code <}{@link BusinessKnowledgeModel }{@code >}
     * {@link JAXBElement }{@code <}{@link InputData }{@code >}
     * {@link JAXBElement }{@code <}{@link Decision }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends DrgElement>> getDrgElement() {
        if (drgElement == null) {
            drgElement = new ArrayList<JAXBElement<? extends DrgElement>>();
        }
        return this.drgElement;
    }

    /**
     * Find the contained Business Knowledge Model if one exists.
     * 
     * @return <code>BusinessKnowledgeModel</code> or <code>null</code>.
     */
    public BusinessKnowledgeModel getBusinessKnowledgeModel() {
        for (JAXBElement<? extends DrgElement> el : getDrgElement()) {
            if (el.getValue() instanceof BusinessKnowledgeModel) {
                return (BusinessKnowledgeModel) el.getValue();
            }
        }
        return null;
    }

    public void setBusinessKnowledgeModel(JAXBElement<? extends DrgElement> bkm) {
        getDrgElement().add(bkm);
    }

    /**
     * Filter getDrgElements to just those containing decisions.
     * 
     * @return <code>List</code> of <code>Decision</code>.
     */
    public List<Decision> getDecisions() {
        List<Decision> decisions = new ArrayList<Decision>();
        for (JAXBElement<? extends DrgElement> el : getDrgElement()) {
            if (el.getValue() instanceof Decision) {
                decisions.add((Decision) el.getValue());
            }
        }
        return decisions;
    }

    public Decision getDecisionById(String id) {
        for (Decision d : getDecisions()) {
            if (d.getId().equals(id)) {
                return d;
            }
        }
        return null;
    }

    public void addDecision(Decision decision) {
        getDrgElement().add(
                new JAXBElement<Decision>(new QName("Decision"),
                        Decision.class, decision));

    }

    /**
     * Gets the value of the elementCollection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the elementCollection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getElementCollection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ElementCollection }
     * 
     * 
     */
    public List<ElementCollection> getElementCollection() {
        if (elementCollection == null) {
            elementCollection = new ArrayList<ElementCollection>();
        }
        return this.elementCollection;
    }

    /**
     * Gets the value of the businessContextElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the businessContextElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBusinessContextElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link OrganizationUnit }{@code >}
     * {@link JAXBElement }{@code <}{@link BusinessContextElement }{@code >}
     * {@link JAXBElement }{@code <}{@link PerformanceIndicator }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends BusinessContextElement>> getBusinessContextElement() {
        if (businessContextElement == null) {
            businessContextElement = new ArrayList<JAXBElement<? extends BusinessContextElement>>();
        }
        return this.businessContextElement;
    }

    /**
     * Gets the value of the expressionLanguage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpressionLanguage() {
        if (expressionLanguage == null) {
            return "FEEL";
        } else {
            return expressionLanguage;
        }
    }

    /**
     * Sets the value of the expressionLanguage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpressionLanguage(String value) {
        this.expressionLanguage = value;
    }

    /**
     * Gets the value of the typeLanguage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTypeLanguage() {
        if (typeLanguage == null) {
            return "FEEL";
        } else {
            return typeLanguage;
        }
    }

    /**
     * Sets the value of the typeLanguage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTypeLanguage(String value) {
        this.typeLanguage = value;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNamespace(String value) {
        this.namespace = value;
    }

    @Override
    public Definitions setId(String value) {
        return (Definitions) super.setId(value);
    }

    @Override
    public Definitions setDescription(String value) {
        return (Definitions) super.setDescription(value);
    }

    @Override
    public Definitions setName(String value) {
        return (Definitions) super.setName(value);
    }

    public void write(Writer out) throws DecisionException {
        JAXBContext jaxbContext;
        try {
            jaxbContext = JAXBContext.newInstance(Definitions.class);
            Marshaller jaxbMarshaller = jaxbContext.createMarshaller();

            // output pretty printed
            jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

            jaxbMarshaller.marshal(this, out);
        } catch (JAXBException e) {
            throw new DecisionException(String.format(
                    "Unable to serialise %1$s", getId()), e);
        }
    }
}
