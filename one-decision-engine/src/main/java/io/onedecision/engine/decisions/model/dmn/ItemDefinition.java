//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.06 at 04:59:26 PM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tItemDefinition complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tItemDefinition"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tNamedElement"&gt;
 *       &lt;choice&gt;
 *         &lt;sequence&gt;
 *           &lt;choice minOccurs="0"&gt;
 *             &lt;element name="typeDefinition" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *             &lt;element name="typeRef" type="{http://www.omg.org/spec/DMN/20130901}tDMNElementReference"/&gt;
 *           &lt;/choice&gt;
 *           &lt;element name="allowedValue" type="{http://www.omg.org/spec/DMN/20130901}tExpression" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *         &lt;element name="itemComponent" type="{http://www.omg.org/spec/DMN/20130901}tItemComponent" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute name="typeLanguage" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="isCollection" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;anyAttribute processContents='lax' namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tItemDefinition", propOrder = {
    "typeDefinition",
    "typeRef",
    "allowedValue",
    "itemComponent"
})
public class ItemDefinition
    extends NamedElement
{

    protected String typeDefinition;
    protected DmnElementReference typeRef;
    protected List<Expression> allowedValue;
    protected List<ItemComponent> itemComponent;
    @XmlAttribute(name = "typeLanguage")
    @XmlSchemaType(name = "anyURI")
    protected String typeLanguage;
    @XmlAttribute(name = "isCollection")
    protected Boolean isCollection;

    /**
     * Gets the value of the typeDefinition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTypeDefinition() {
        return typeDefinition;
    }

    /**
     * Sets the value of the typeDefinition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTypeDefinition(String value) {
        this.typeDefinition = value;
    }

    /**
     * Gets the value of the typeRef property.
     * 
     * @return
     *     possible object is
     *     {@link DmnElementReference }
     *     
     */
    public DmnElementReference getTypeRef() {
        return typeRef;
    }

    /**
     * Sets the value of the typeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link DmnElementReference }
     *     
     */
    public void setTypeRef(DmnElementReference value) {
        this.typeRef = value;
    }

    /**
     * Gets the value of the allowedValue property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the allowedValue property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAllowedValue().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Expression }
     * 
     * 
     */
    public List<Expression> getAllowedValue() {
        if (allowedValue == null) {
            allowedValue = new ArrayList<Expression>();
        }
        return this.allowedValue;
    }

    /**
     * Gets the value of the itemComponent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemComponent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemComponent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ItemComponent }
     * 
     * 
     */
    public List<ItemComponent> getItemComponent() {
        if (itemComponent == null) {
            itemComponent = new ArrayList<ItemComponent>();
        }
        return this.itemComponent;
    }

    /**
     * Gets the value of the typeLanguage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTypeLanguage() {
        return typeLanguage;
    }

    /**
     * Sets the value of the typeLanguage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTypeLanguage(String value) {
        this.typeLanguage = value;
    }

    /**
     * Gets the value of the isCollection property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isIsCollection() {
        if (isCollection == null) {
            return false;
        } else {
            return isCollection;
        }
    }

    /**
     * Sets the value of the isCollection property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsCollection(Boolean value) {
        this.isCollection = value;
    }

    public ItemDefinition withTypeDefinition(String value) {
        setTypeDefinition(value);
        return this;
    }

    public ItemDefinition withTypeRef(DmnElementReference value) {
        setTypeRef(value);
        return this;
    }

    public ItemDefinition withAllowedValue(Expression... values) {
        if (values!= null) {
            for (Expression value: values) {
                getAllowedValue().add(value);
            }
        }
        return this;
    }

    public ItemDefinition withAllowedValue(Collection<Expression> values) {
        if (values!= null) {
            getAllowedValue().addAll(values);
        }
        return this;
    }

    public ItemDefinition withItemComponent(ItemComponent... values) {
        if (values!= null) {
            for (ItemComponent value: values) {
                getItemComponent().add(value);
            }
        }
        return this;
    }

    public ItemDefinition withItemComponent(Collection<ItemComponent> values) {
        if (values!= null) {
            getItemComponent().addAll(values);
        }
        return this;
    }

    public ItemDefinition withTypeLanguage(String value) {
        setTypeLanguage(value);
        return this;
    }

    public ItemDefinition withIsCollection(Boolean value) {
        setIsCollection(value);
        return this;
    }

    @Override
    public ItemDefinition withName(String value) {
        setName(value);
        return this;
    }

    @Override
    public ItemDefinition withDescription(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ItemDefinition withAny(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getAny().add(value);
            }
        }
        return this;
    }

    @Override
    public ItemDefinition withAny(Collection<Object> values) {
        if (values!= null) {
            getAny().addAll(values);
        }
        return this;
    }

    @Override
    public ItemDefinition withId(String value) {
        setId(value);
        return this;
    }

}
