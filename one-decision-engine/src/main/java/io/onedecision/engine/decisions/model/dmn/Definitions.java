//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.06 at 04:59:26 PM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tDefinitions complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDefinitions"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tNamedElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}Import" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}ItemDefinition" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}DRGElement" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}ElementCollection" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20130901}BusinessContextElement" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="expressionLanguage" type="{http://www.w3.org/2001/XMLSchema}anyURI" default="http://www.omg.org/spec/FEEL/20140401" /&gt;
 *       &lt;attribute name="typeLanguage" type="{http://www.w3.org/2001/XMLSchema}anyURI" default="http://www.omg.org/spec/FEEL/20140401" /&gt;
 *       &lt;attribute name="namespace" use="required" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="exporter" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="exporterVersion" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;anyAttribute processContents='lax' namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDefinitions", propOrder = {
    "_import",
    "itemDefinition",
    "drgElement",
    "elementCollection",
    "businessContextElement"
})
public class Definitions
    extends NamedElement
{

    @XmlElement(name = "Import")
    protected List<Import> _import;
    @XmlElement(name = "ItemDefinition")
    protected List<ItemDefinition> itemDefinition;
    @XmlElementRef(name = "DRGElement", namespace = "http://www.omg.org/spec/DMN/20130901", type = JAXBElement.class, required = false)
    protected List<DrgElement> drgElement;
    @XmlElement(name = "ElementCollection")
    protected List<ElementCollection> elementCollection;
    @XmlElementRef(name = "BusinessContextElement", namespace = "http://www.omg.org/spec/DMN/20130901", type = JAXBElement.class, required = false)
    protected List<BusinessContextElement> businessContextElement;
    @XmlAttribute(name = "expressionLanguage")
    @XmlSchemaType(name = "anyURI")
    protected String expressionLanguage;
    @XmlAttribute(name = "typeLanguage")
    @XmlSchemaType(name = "anyURI")
    protected String typeLanguage;
    @XmlAttribute(name = "namespace", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String namespace;
    @XmlAttribute(name = "exporter")
    protected String exporter;
    @XmlAttribute(name = "exporterVersion")
    protected String exporterVersion;

    /**
     * Gets the value of the import property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the import property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getImport().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Import }
     * 
     * 
     */
    public List<Import> getImport() {
        if (_import == null) {
            _import = new ArrayList<Import>();
        }
        return this._import;
    }

    /**
     * Gets the value of the itemDefinition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemDefinition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemDefinition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ItemDefinition }
     * 
     * 
     */
    public List<ItemDefinition> getItemDefinition() {
        if (itemDefinition == null) {
            itemDefinition = new ArrayList<ItemDefinition>();
        }
        return this.itemDefinition;
    }

    /**
     * Gets the value of the drgElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the drgElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDRGElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link  }{@code}{@link Decision }{@code}
     * {@link  }{@code}{@link DrgElement }{@code}
     * {@link  }{@code}{@link BusinessKnowledgeModel }{@code}
     * {@link  }{@code}{@link InputData }{@code}
     * {@link  }{@code}{@link KnowledgeSource }{@code}
     * 
     * 
     */
    public List<DrgElement> getDRGElement() {
        if (drgElement == null) {
            drgElement = new ArrayList<DrgElement>();
        }
        return this.drgElement;
    }

    /**
     * Gets the value of the elementCollection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the elementCollection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getElementCollection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ElementCollection }
     * 
     * 
     */
    public List<ElementCollection> getElementCollection() {
        if (elementCollection == null) {
            elementCollection = new ArrayList<ElementCollection>();
        }
        return this.elementCollection;
    }

    /**
     * Gets the value of the businessContextElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the businessContextElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBusinessContextElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link PerformanceIndicator }{@code >}
     * {@link JAXBElement }{@code <}{@link BusinessContextElement }{@code >}
     * {@link JAXBElement }{@code <}{@link OrganizationUnit }{@code >}
     * 
     * 
     */
    public List<BusinessContextElement> getBusinessContextElement() {
        if (businessContextElement == null) {
            businessContextElement = new ArrayList<BusinessContextElement>();
        }
        return this.businessContextElement;
    }

    /**
     * Gets the value of the expressionLanguage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpressionLanguage() {
        if (expressionLanguage == null) {
            return "http://www.omg.org/spec/FEEL/20140401";
        } else {
            return expressionLanguage;
        }
    }

    /**
     * Sets the value of the expressionLanguage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpressionLanguage(String value) {
        this.expressionLanguage = value;
    }

    /**
     * Gets the value of the typeLanguage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTypeLanguage() {
        if (typeLanguage == null) {
            return "http://www.omg.org/spec/FEEL/20140401";
        } else {
            return typeLanguage;
        }
    }

    /**
     * Sets the value of the typeLanguage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTypeLanguage(String value) {
        this.typeLanguage = value;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNamespace(String value) {
        this.namespace = value;
    }

    /**
     * Gets the value of the exporter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExporter() {
        return exporter;
    }

    /**
     * Sets the value of the exporter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExporter(String value) {
        this.exporter = value;
    }

    /**
     * Gets the value of the exporterVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExporterVersion() {
        return exporterVersion;
    }

    /**
     * Sets the value of the exporterVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExporterVersion(String value) {
        this.exporterVersion = value;
    }

    public Definitions withImport(Import... values) {
        if (values!= null) {
            for (Import value: values) {
                getImport().add(value);
            }
        }
        return this;
    }

    public Definitions withImport(Collection<Import> values) {
        if (values!= null) {
            getImport().addAll(values);
        }
        return this;
    }

    public Definitions withItemDefinition(ItemDefinition... values) {
        if (values!= null) {
            for (ItemDefinition value: values) {
                getItemDefinition().add(value);
            }
        }
        return this;
    }

    public Definitions withItemDefinition(Collection<ItemDefinition> values) {
        if (values!= null) {
            getItemDefinition().addAll(values);
        }
        return this;
    }

    public Definitions withDRGElement(DrgElement... values) {
        if (values!= null) {
            for (DrgElement value : values) {
                getDRGElement().add(value);
            }
        }
        return this;
    }

    public Definitions withDRGElement(Collection<DrgElement> values) {
        if (values!= null) {
            getDRGElement().addAll(values);
        }
        return this;
    }

    public void withDecision(Decision... d) {
        withDRGElement(d);
    }

    public Definitions withElementCollection(ElementCollection... values) {
        if (values!= null) {
            for (ElementCollection value: values) {
                getElementCollection().add(value);
            }
        }
        return this;
    }

    public Definitions withElementCollection(Collection<ElementCollection> values) {
        if (values!= null) {
            getElementCollection().addAll(values);
        }
        return this;
    }

    public Definitions withBusinessContextElement(
            BusinessContextElement... values) {
        if (values!= null) {
            for (BusinessContextElement value : values) {
                getBusinessContextElement().add(value);
            }
        }
        return this;
    }

    public Definitions withBusinessContextElement(
            Collection<BusinessContextElement> values) {
        if (values!= null) {
            getBusinessContextElement().addAll(values);
        }
        return this;
    }

    public Definitions withExpressionLanguage(String value) {
        setExpressionLanguage(value);
        return this;
    }

    public Definitions withTypeLanguage(String value) {
        setTypeLanguage(value);
        return this;
    }

    public Definitions withNamespace(String value) {
        setNamespace(value);
        return this;
    }

    public Definitions withExporter(String value) {
        setExporter(value);
        return this;
    }

    public Definitions withExporterVersion(String value) {
        setExporterVersion(value);
        return this;
    }

    @Override
    public Definitions withName(String value) {
        setName(value);
        return this;
    }

    @Override
    public Definitions withDescription(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public Definitions withAny(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getAny().add(value);
            }
        }
        return this;
    }

    @Override
    public Definitions withAny(Collection<Object> values) {
        if (values!= null) {
            getAny().addAll(values);
        }
        return this;
    }

    @Override
    public Definitions withId(String value) {
        setId(value);
        return this;
    }

}
