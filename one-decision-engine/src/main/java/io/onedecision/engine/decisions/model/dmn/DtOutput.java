//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.06 at 09:06:03 PM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tDTOutput complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDTOutput"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tClause"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="outputDefinition" type="{http://www.omg.org/spec/DMN/20130901}tDMNElementReference" minOccurs="0"/&gt;
 *         &lt;element name="outputValue" type="{http://www.omg.org/spec/DMN/20130901}tLiteralExpression" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="defaultOutputEntry" type="{http://www.omg.org/spec/DMN/20130901}tLiteralExpression" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDTOutput", propOrder = {
    "outputDefinition",
    "outputValues",
    "defaultOutputEntry"
})
public class DtOutput
    extends Clause
    implements Serializable
{

    protected DmnElementReference outputDefinition;
    @XmlElement(name = "outputValue")
    protected List<LiteralExpression> outputValues;
    protected LiteralExpression defaultOutputEntry;

    /**
     * Gets the value of the outputDefinition property.
     * 
     * @return
     *     possible object is
     *     {@link DmnElementReference }
     *     
     */
    public DmnElementReference getOutputDefinition() {
        return outputDefinition;
    }

    /**
     * Sets the value of the outputDefinition property.
     * 
     * @param value
     *     allowed object is
     *     {@link DmnElementReference }
     *     
     */
    public void setOutputDefinition(DmnElementReference value) {
        this.outputDefinition = value;
    }

    /**
     * Gets the value of the outputValues property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the outputValues property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOutputValues().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LiteralExpression }
     * 
     * 
     */
    public List<LiteralExpression> getOutputValues() {
        if (outputValues == null) {
            outputValues = new ArrayList<LiteralExpression>();
        }
        return this.outputValues;
    }

    /**
     * Gets the value of the defaultOutputEntry property.
     * 
     * @return
     *     possible object is
     *     {@link LiteralExpression }
     *     
     */
    public LiteralExpression getDefaultOutputEntry() {
        return defaultOutputEntry;
    }

    /**
     * Sets the value of the defaultOutputEntry property.
     * 
     * @param value
     *     allowed object is
     *     {@link LiteralExpression }
     *     
     */
    public void setDefaultOutputEntry(LiteralExpression value) {
        this.defaultOutputEntry = value;
    }

    public DtOutput withOutputDefinition(DmnElementReference value) {
        setOutputDefinition(value);
        return this;
    }

    public DtOutput withOutputValues(LiteralExpression... values) {
        if (values!= null) {
            for (LiteralExpression value: values) {
                getOutputValues().add(value);
            }
        }
        return this;
    }

    public DtOutput withOutputValues(Collection<LiteralExpression> values) {
        if (values!= null) {
            getOutputValues().addAll(values);
        }
        return this;
    }

    public DtOutput withDefaultOutputEntry(LiteralExpression value) {
        setDefaultOutputEntry(value);
        return this;
    }

    @Override
    public DtOutput withId(String value) {
        setId(value);
        return this;
    }

    @Override
    public DtOutput withName(String value) {
        setName(value);
        return this;
    }

}
