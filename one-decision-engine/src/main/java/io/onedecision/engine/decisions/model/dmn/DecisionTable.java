//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.06 at 04:59:26 PM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tDecisionTable complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDecisionTable"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tExpression"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="input" type="{http://www.omg.org/spec/DMN/20130901}tDTInput" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="output" type="{http://www.omg.org/spec/DMN/20130901}tDTOutput" maxOccurs="unbounded"/&gt;
 *         &lt;element name="rule" type="{http://www.omg.org/spec/DMN/20130901}tDecisionRule" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="hitPolicy" type="{http://www.omg.org/spec/DMN/20130901}HitPolicy" default="UNIQUE" /&gt;
 *       &lt;attribute name="aggregation" type="{http://www.omg.org/spec/DMN/20130901}BuiltinAggregator" /&gt;
 *       &lt;attribute name="preferedOrientation" type="{http://www.omg.org/spec/DMN/20130901}DecisionTableOrientation" default="Rule-as-Row" /&gt;
 *       &lt;anyAttribute processContents='lax' namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDecisionTable", propOrder = {
    "input",
    "output",
    "rule"
})
public class DecisionTable
    extends Expression
{

    protected List<DtInput> input;
    @XmlElement(required = true)
    protected List<DtOutput> output;
    protected List<DecisionRule> rule;
    @XmlAttribute(name = "hitPolicy")
    protected HitPolicy hitPolicy;
    @XmlAttribute(name = "aggregation")
    protected BuiltinAggregator aggregation;
    @XmlAttribute(name = "preferedOrientation")
    protected DecisionTableOrientation preferedOrientation;

    /**
     * Gets the value of the input property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the input property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInput().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DtInput }
     * 
     * 
     */
    public List<DtInput> getInput() {
        if (input == null) {
            input = new ArrayList<DtInput>();
        }
        return this.input;
    }

    /**
     * Gets the value of the output property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the output property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOutput().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DtOutput }
     * 
     * 
     */
    public List<DtOutput> getOutput() {
        if (output == null) {
            output = new ArrayList<DtOutput>();
        }
        return this.output;
    }

    /**
     * Gets the value of the rule property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rule property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRule().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DecisionRule }
     * 
     * 
     */
    public List<DecisionRule> getRule() {
        if (rule == null) {
            rule = new ArrayList<DecisionRule>();
        }
        return this.rule;
    }

    /**
     * Gets the value of the hitPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link HitPolicy }
     *     
     */
    public HitPolicy getHitPolicy() {
        if (hitPolicy == null) {
            return HitPolicy.UNIQUE;
        } else {
            return hitPolicy;
        }
    }

    /**
     * Sets the value of the hitPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link HitPolicy }
     *     
     */
    public void setHitPolicy(HitPolicy value) {
        this.hitPolicy = value;
    }

    /**
     * Gets the value of the aggregation property.
     * 
     * @return
     *     possible object is
     *     {@link BuiltinAggregator }
     *     
     */
    public BuiltinAggregator getAggregation() {
        return aggregation;
    }

    /**
     * Sets the value of the aggregation property.
     * 
     * @param value
     *     allowed object is
     *     {@link BuiltinAggregator }
     *     
     */
    public void setAggregation(BuiltinAggregator value) {
        this.aggregation = value;
    }

    /**
     * Gets the value of the preferedOrientation property.
     * 
     * @return
     *     possible object is
     *     {@link DecisionTableOrientation }
     *     
     */
    public DecisionTableOrientation getPreferedOrientation() {
        if (preferedOrientation == null) {
            return DecisionTableOrientation.RULE_AS_ROW;
        } else {
            return preferedOrientation;
        }
    }

    /**
     * Sets the value of the preferedOrientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link DecisionTableOrientation }
     *     
     */
    public void setPreferedOrientation(DecisionTableOrientation value) {
        this.preferedOrientation = value;
    }

    public DecisionTable withInput(DtInput... values) {
        if (values!= null) {
            for (DtInput value: values) {
                getInput().add(value);
            }
        }
        return this;
    }

    public DecisionTable withInput(Collection<DtInput> values) {
        if (values!= null) {
            getInput().addAll(values);
        }
        return this;
    }

    public DecisionTable withOutput(DtOutput... values) {
        if (values!= null) {
            for (DtOutput value: values) {
                getOutput().add(value);
            }
        }
        return this;
    }

    public DecisionTable withOutput(Collection<DtOutput> values) {
        if (values!= null) {
            getOutput().addAll(values);
        }
        return this;
    }

    public DecisionTable withRule(DecisionRule... values) {
        if (values!= null) {
            for (DecisionRule value: values) {
                getRule().add(value);
            }
        }
        return this;
    }

    public DecisionTable withRule(Collection<DecisionRule> values) {
        if (values!= null) {
            getRule().addAll(values);
        }
        return this;
    }

    public DecisionTable withHitPolicy(HitPolicy value) {
        setHitPolicy(value);
        return this;
    }

    public DecisionTable withAggregation(BuiltinAggregator value) {
        setAggregation(value);
        return this;
    }

    public DecisionTable withPreferedOrientation(DecisionTableOrientation value) {
        setPreferedOrientation(value);
        return this;
    }

    @Override
    public DecisionTable withDescription(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public DecisionTable withAny(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getAny().add(value);
            }
        }
        return this;
    }

    @Override
    public DecisionTable withAny(Collection<Object> values) {
        if (values!= null) {
            getAny().addAll(values);
        }
        return this;
    }

    @Override
    public DecisionTable withId(String value) {
        setId(value);
        return this;
    }

}
