//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.25 at 07:22:00 PM GMT 
//


package io.onedecision.engine.decisions.model.dmn;

import io.onedecision.engine.decisions.api.DecisionConstants;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;


/**
 * <p>Java class for tInvocation complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tInvocation"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20151101/dmn11.xsd}tExpression"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.omg.org/spec/DMN/20151101/dmn11.xsd}expression" minOccurs="0"/&gt;
 *         &lt;element name="binding" type="{http://www.omg.org/spec/DMN/20151101/dmn11.xsd}tBinding" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;anyAttribute processContents='lax' namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tInvocation", propOrder = {
    "expression",
    "binding"
})
public class Invocation extends Expression implements Serializable {

    private static final long serialVersionUID = 3745083277636138626L;

    private static ObjectFactory objFact = new ObjectFactory();
    
    @XmlElementRef(name = "expression", namespace = "http://www.omg.org/spec/DMN/20151101/dmn11.xsd", type = JAXBElement.class, required = false)
    protected JAXBElement<? extends Expression> expression;
    protected java.util.List<Binding> binding;

    /**
     * Gets the value of the expression property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link FunctionDefinition }{@code >}
     *     {@link JAXBElement }{@code <}{@link Invocation }{@code >}
     *     {@link JAXBElement }{@code <}{@link Context }{@code >}
     *     {@link JAXBElement }{@code <}{@link Relation }{@code >}
     *     {@link JAXBElement }{@code <}{@link Expression }{@code >}
     *     {@link JAXBElement }{@code <}{@link io.onedecision.engine.decisions.model.dmn.List }{@code >}
     *     {@link JAXBElement }{@code <}{@link LiteralExpression }{@code >}
     *     {@link JAXBElement }{@code <}{@link DecisionTable }{@code >}
     *     
     */
    public JAXBElement<? extends Expression> getExpression() {
        return expression;
    }

    /**
     * Sets the value of the expression property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link FunctionDefinition }{@code >}
     *     {@link JAXBElement }{@code <}{@link Invocation }{@code >}
     *     {@link JAXBElement }{@code <}{@link Context }{@code >}
     *     {@link JAXBElement }{@code <}{@link Relation }{@code >}
     *     {@link JAXBElement }{@code <}{@link Expression }{@code >}
     *     {@link JAXBElement }{@code <}{@link io.onedecision.engine.decisions.model.dmn.List }{@code >}
     *     {@link JAXBElement }{@code <}{@link LiteralExpression }{@code >}
     *     {@link JAXBElement }{@code <}{@link DecisionTable }{@code >}
     *     
     */
    public void setExpression(JAXBElement<? extends Expression> value) {
        this.expression = value;
    }

    /**
     * Gets the value of the binding property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the binding property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBinding().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Binding }
     * 
     * 
     */
    public java.util.List<Binding> getBinding() {
        if (binding == null) {
            binding = new ArrayList<Binding>();
        }
        return this.binding;
    }

    public Invocation withExpression(JAXBElement<? extends Expression> value) {
        setExpression(value);
        return this;
    }

    public Invocation withCalledFunction(String le) {
        setExpression(new JAXBElement(DecisionConstants.LITERAL_EXPRESSION,
                LiteralExpression.class, objFact.createLiteralExpression()
                        .withText(le)));
        return this;
    }

    public Invocation withBinding(Binding... values) {
        if (values!= null) {
            for (Binding value: values) {
                getBinding().add(value);
            }
        }
        return this;
    }

    public Invocation withBinding(Collection<Binding> values) {
        if (values!= null) {
            getBinding().addAll(values);
        }
        return this;
    }

    @Override
    public Invocation withTypeRef(QName value) {
        setTypeRef(value);
        return this;
    }

    @Override
    public Invocation withDescription(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public Invocation withExtensionElements(io.onedecision.engine.decisions.model.dmn.DmnElement.ExtensionElements value) {
        setExtensionElements(value);
        return this;
    }

    @Override
    public Invocation withId(String value) {
        setId(value);
        return this;
    }

    @Override
    public Invocation withLabel(String value) {
        setLabel(value);
        return this;
    }

}
