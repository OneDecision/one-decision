//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.07 at 10:56:15 AM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for tDecisionRule complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDecisionRule"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="condition" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="conclusion" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" /&gt;
 *       &lt;attribute name="isOrdered" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDecisionRule", propOrder = {
    "condition",
    "conclusion"
})
public class DecisionRule implements Serializable {

    private static final long serialVersionUID = 5552181443229088239L;
    @XmlElementRef(name = "condition", namespace = "http://www.omg.org/spec/DMN/20130901", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> condition;
    @XmlElementRef(name = "conclusion", namespace = "http://www.omg.org/spec/DMN/20130901", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> conclusion;
    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute(name = "isOrdered")
    protected Boolean isOrdered;

    /**
     * Gets the value of the condition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the condition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getCondition() {
        if (condition == null) {
            condition = new ArrayList<JAXBElement<Object>>();
        }
        return this.condition;
    }

    public List<Expression> getConditions() {
        ArrayList<Expression> unwrappedConditions = new ArrayList<Expression>();
        for (JAXBElement<Object> c : getCondition()) {
            unwrappedConditions.add((Expression) c.getValue());
        }
        return unwrappedConditions;
    }

    /**
     * Gets the value of the conclusion property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conclusion property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConclusion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getConclusion() {
        if (conclusion == null) {
            conclusion = new ArrayList<JAXBElement<Object>>();
        }
        return this.conclusion;
    }

    public List<Expression> getConclusions() {
        ArrayList<Expression> unwrappedConclusions = new ArrayList<Expression>();
        for (JAXBElement<Object> c : getConclusion()) {
            unwrappedConclusions.add((Expression) c.getValue());
        }
        return unwrappedConclusions;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the isOrdered property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsOrdered() {
        return isOrdered;
    }

    /**
     * Sets the value of the isOrdered property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsOrdered(Boolean value) {
        this.isOrdered = value;
    }

    @SafeVarargs
    public final DecisionRule withCondition(JAXBElement<Object>... values) {
        if (values!= null) {
            for (JAXBElement<Object> value: values) {
                getCondition().add(value);
            }
        }
        return this;
    }

    public DecisionRule withCondition(Collection<JAXBElement<Object>> values) {
        if (values!= null) {
            getCondition().addAll(values);
        }
        return this;
    }

    @SafeVarargs
    public final DecisionRule withConclusion(JAXBElement<Object>... values) {
        if (values!= null) {
            for (JAXBElement<Object> value: values) {
                getConclusion().add(value);
            }
        }
        return this;
    }

    public DecisionRule withConclusion(Collection<JAXBElement<Object>> values) {
        if (values!= null) {
            getConclusion().addAll(values);
        }
        return this;
    }

    public DecisionRule withId(String value) {
        setId(value);
        return this;
    }

    public DecisionRule withIsOrdered(Boolean value) {
        setIsOrdered(value);
        return this;
    }

}
