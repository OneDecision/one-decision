//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.06 at 09:06:03 PM BST 
//


package io.onedecision.engine.decisions.model.dmn;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.w3c.dom.Element;


/**
 * <p>Java class for tContext complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tContext"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.omg.org/spec/DMN/20130901}tExpression"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="contextEntry" type="{http://www.omg.org/spec/DMN/20130901}tContextEntry" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;anyAttribute processContents='lax' namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tContext", propOrder = {
    "contextEntries"
})
public class Context
    extends Expression
    implements Serializable
{

    @XmlElement(name = "contextEntry")
    protected List<ContextEntry> contextEntries;

    /**
     * Gets the value of the contextEntries property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contextEntries property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContextEntries().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ContextEntry }
     * 
     * 
     */
    public List<ContextEntry> getContextEntries() {
        if (contextEntries == null) {
            contextEntries = new ArrayList<ContextEntry>();
        }
        return this.contextEntries;
    }

    public Context withContextEntries(ContextEntry... values) {
        if (values!= null) {
            for (ContextEntry value: values) {
                getContextEntries().add(value);
            }
        }
        return this;
    }

    public Context withContextEntries(Collection<ContextEntry> values) {
        if (values!= null) {
            getContextEntries().addAll(values);
        }
        return this;
    }

    @Override
    public Context withDescription(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public Context withAnies(Element... values) {
        if (values!= null) {
            for (Element value: values) {
                getAnies().add(value);
            }
        }
        return this;
    }

    @Override
    public Context withAnies(Collection<Element> values) {
        if (values!= null) {
            getAnies().addAll(values);
        }
        return this;
    }

    @Override
    public Context withId(String value) {
        setId(value);
        return this;
    }

}
